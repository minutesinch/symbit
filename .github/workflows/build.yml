on:
  push:
    branches:
      - prod

jobs:
  build:
    name: Build for all platforms
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Extra steps for macOS
        if: matrix.os == 'macos-latest'
        run: |
          npm i -g nan
          export NODE_PATH=$(npm root -g)
          npm i -D macos-alias
      - name: Install dependencies
        run: |
          npm i
      - name: Build
        run: npm run build
      - name: Upload artifact for next job
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: out/make/

  release:
    name: Package and Release
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact from previous job
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Package
        run: |
          zip -r linux.zip deb/x64/*.deb rpm/x64/symbit*.rpm zip/linux/x64/*.zip
          zip -r macos.zip zip/darwin/x64/*.zip *.dmg
          zip -r windows.zip squirrel.windows/x64/*
      - name: Get release
        uses: bruceadams/get-release@v1.2.1
        id: get_release
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload linux package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: linux.zip
          asset_name: linux.zip
          asset_content_type: application/zip
      - name: Upload macOS package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: macos.zip
          asset_name: macos.zip
          asset_content_type: application/zip
      - name: Upload windows package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip